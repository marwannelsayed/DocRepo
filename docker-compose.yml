version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: docrepo_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-document_repository}
      POSTGRES_USER: ${POSTGRES_USER:-docrepo_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_this}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_setup.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - docrepo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-docrepo_user} -d ${POSTGRES_DB:-document_repository}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: docrepo_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-docrepo_user}:${POSTGRES_PASSWORD:-secure_password_change_this}@postgres:5432/${POSTGRES_DB:-document_repository}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      UPLOAD_DIRECTORY: /app/uploads
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      HOST: 0.0.0.0
      PORT: 8088
    ports:
      - "8088:8088"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docrepo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: docrepo_frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:8088
      REACT_APP_DOCEX_API_URL: http://localhost:8000
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - docrepo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional - for future caching)
  redis:
    image: redis:7-alpine
    container_name: docrepo_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - docrepo_network
    profiles:
      - with-redis

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  docrepo_network:
    driver: bridge
